name: CI

on:
  push:
    branches:
    - main
    tags:
    - '**'
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        python-version:
        - 3.9
        - '3.10'
        - '3.11'
        - '3.12'
        - '3.13'

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Install dependencies
      run: uv pip install --system tox tox-uv

    - name: Run tox targets for ${{ matrix.python-version }}
      run: tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)

    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: '${{ github.workspace }}/.coverage.*'
        include-hidden-files: true
        if-no-files-found: error

  coverage:
    name: Coverage
    runs-on: ubuntu-24.04
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv pip install --system coverage[toml]

      - name: Download data
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine coverage and fail if it's <100%
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --fail-under=100
          echo "## Coverage summary" >> $GITHUB_STEP_SUMMARY
          python -m coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov

  build:
    name: Build wheels on ${{ matrix.os }}
    if: >
      startsWith(github.ref, 'refs/tags/') ||
      github.ref == 'refs/heads/main' ||
      contains(github.event.pull_request.labels.*.name, 'Build')

    strategy:
      matrix:
        os:
        - linux
        - macos
        - windows

    runs-on: ${{ (matrix.os == 'linux' && 'ubuntu-24.04') || (matrix.os == 'macos' && 'macos-15') || (matrix.os == 'windows' && 'windows-2022') || 'unknown' }}

    env:
      CIBW_ARCHS_LINUX: x86_64 i686 aarch64
      CIBW_ARCHS_MACOS: x86_64 universal2
      CIBW_ARCHS_WINDOWS: AMD64 x86 ARM64
      CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: matrix.os == 'linux'
        with:
          platforms: all

      - name: Build sdist
        if: ${{ matrix.os == 'linux' }}
        run: uv build --sdist

      - name: Build wheels
        run: uvx --from cibuildwheel==2.23.2 cibuildwheel --output-dir dist

      - run: ${{ (matrix.os == 'windows' && 'dir') || 'ls -lh' }} dist/

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist

  release:
      needs: [coverage, build]
      if: success() && startsWith(github.ref, 'refs/tags/')
      runs-on: ubuntu-24.04
      environment: release

      permissions:
        contents: read
        id-token: write

      steps:
        - uses: actions/checkout@v4

        - name: get dist artifacts
          uses: actions/download-artifact@v4
          with:
            merge-multiple: true
            pattern: dist-*
            path: dist

        - uses: pypa/gh-action-pypi-publish@release/v1
